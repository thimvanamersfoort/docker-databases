services:

  # MySQL
  mysql:
    container_name: mysql
    image: mysql:8.4.2
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_DB_USER}
      MYSQL_PASSWORD: ${MYSQL_DB_PASS}
    volumes:
      - mysql_data:/var/lib/mysql
    restart: unless-stopped
    command: --upgrade=FORCE
    ports:
      - "${MYSQL_PORT}:3306"

  # PhpMyAdmin
  phpmyadmin:
    container_name: phpmyadmin
    image: phpmyadmin:latest
    env_file:
      - .env
    environment:
      PMA_USER: root
      PMA_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      PMA_HOST: mysql
      PMA_PORT: ${MYSQL_PORT}
      PMA_ARBITRARY: 1
    restart: unless-stopped
    links:
      - mysql
    ports:
      - ${PHPMYADMIN_PORT}:80

  # Redis
  redis-stack:
    container_name: redis-stack
    image: redis/redis-stack:latest
    ports:
      - 6379:6379
      - 8001:8001
    networks:
      - default
    restart: unless-stopped

  # Postgres
  postgres:
    container_name: postgres
    image: postgres:latest
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${PG_DB_USER}
      POSTGRES_PASSWORD: ${PG_DB_PASS}
      POSTGRES_DB: default_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    ports:
      - "${PG_PORT}:5432"

  # PgAdmin
  pgadmin:
    image: dpage/pgadmin4:4.23
    env_file:
      - .env
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@pgadmin.com
      PGADMIN_DEFAULT_PASSWORD: password
      PGADMIN_LISTEN_PORT: 80
    ports:
      - ${PGADMIN_PORT}:80
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    restart: unless-stopped
    depends_on:
      - postgres

  # Elasticsearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.7.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - elk

  # Logstash
  logstash:
    image: docker.elastic.co/logstash/logstash:8.7.1
    container_name: logstash
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline
    ports:
      - "5044:5044"
    networks:
      - elk
    depends_on:
      - elasticsearch

  # Kibana
  kibana:
    image: docker.elastic.co/kibana/kibana:8.7.1
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    networks:
      - elk
    depends_on:
      - elasticsearch

volumes:
  mysql_data:
  postgres_data: 
  pgadmin_data:
  elasticsearch_data:

networks:
  elk:
    driver: bridge